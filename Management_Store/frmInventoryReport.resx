<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kqSlddBB/xdqYDpfpfiYMAAAAABJRU5ErkJggg==
</value>
  </data>
</root>